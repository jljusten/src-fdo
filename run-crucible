#!/usr/bin/env bash
# Jordan Justen : this file is public domain

HERE="$(cd "$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" && pwd)"

set -e

if [ -x "$HERE/crucible/bin/crucible" ]; then
    CRUCIBLE="$HERE/crucible"
else
    CRUCIBLE="$HOME/src/fdo/crucible"
fi
BIN="$CRUCIBLE/bin/crucible"

if [ ! -x "$BIN" ]; then
    echo "$BIN is not executable"
    exit 1
fi

if [ ! -z "$START" ]; then
    if [ -z "$END" ]; then
        END=$(($START + 50))
    fi
    RANGE=-$START-$END
    TESTS="$($BIN ls-tests | grep '^func' | head -$END | tail +$(($START+1)))"
fi

TIMENOW=`date +%y%m%d-%H%M%S`
: ${RESULTS_SUBDIR=`hostname`}
LOG_DIR="$HERE/results/$RESULTS_SUBDIR"
mkdir -p "$LOG_DIR"
LOG="$LOG_DIR/crucible$RANGE-$TIMENOW.log"

# Required
: ${CMD_ENV="$HERE/run-with-dev-mesa stdbuf -o L"}
CMD="$BIN run $TESTS"

cd $BIN_DIR
echo Log file: $LOG
echo $CMD "$@" > $LOG
time nice $CMD_ENV $CMD "$@" |& tee -a $LOG | \
    python3 <(
cat << EOF
from collections import Counter
import re
import sys

result_re = re.compile('crucible: (start|ran|pass|fail|skip|lost)')
summary_re = re.compile('crucible: info   : (ran|pass|fail|skip|lost)')
printed_nums = False
results = Counter()
for l in sys.stdin:
    mo = result_re.match(l)
    if mo is not None:
        stat = mo.group(1)
        results.update((stat,))
        stats = ', '.join([ f'{k}={v}' for (k,v) in results.items() ])
        print(f'{("","\r")[printed_nums]}{stats}', end='', flush=True)
        printed_nums = True
        continue
    mo = summary_re.match(l)
    if mo is not None:
        if printed_nums:
            print()
            printed_nums = False
        print(l, end='')
        continue
    #else:
    #   print('hmm', l.rstrip())

if printed_nums:
    print()
    printed_nums = False

EOF
)
