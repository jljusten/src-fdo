#!/usr/bin/env bash
# Jordan Justen : this file is public domain

source "$(cd "$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" && pwd)"/menv

if [ -z "$CFLAGS" ]; then
CFLAGS="-m${FDO_SIZE}"
fi
if [ -z "$CXXFLAGS" ]; then
CXXFLAGS="-m${FDO_SIZE}"
fi
if [ -z "$CPPFLAGS" ]; then
CPPFLAGS="-m${FDO_SIZE}"
fi

if [[ "$DEBUG" == "0" ]]; then
  unset DEBUG
fi

: ${MESON=1}
if [ ! -f "$MESA_DIR/meson.build" ]; then
  MESON=0
fi

: ${CROCUS=1}
if [[ "$CROCUS" -ne 0 && ! -d "$MESA_DIR/src/gallium/drivers/crocus" ]]; then
    CROCUS=0
fi

: ${HASVK=1}
if [[ "$HASVK" -ne 0 && ! -d "$MESA_DIR/src/intel/vulkan_hasvk" ]]; then
    HASVK=0
fi

if [ -z "$DEBUG" ]; then
  D_CFLAGS='-O2 -DNDEBUG --debug'
  export CFLAGS="$CFLAGS $D_CFLAGS"
  export CXXFLAGS="$CXXFLAGS $D_CFLAGS"
  export CPPFLAGS="$CPPFLAGS $D_CFLAGS"
  MESON_BUILDTYPE=release
else
  export DEBUG_FLAG=--enable-debug
  MESON_BUILDTYPE=debug
fi

if [[ "$MESON" -ne 0 && ! -f "$MESA_DIR/meson.build" ]]; then
    MESON=0
fi

if [[ -d "$MESA_DIR/src/mesa/drivers/dri/i965" ]]; then
    DRI_DRIVERS=i965
else
    DRI_DRIVERS=
fi

if [ -n "$DRI_DRIVERS" ]; then
    if [[ "$MESON" -ne 0 ]]; then
        DRI_DRIVERS=-Ddri-drivers=$DRI_DRIVERS
    else
        DRI_DRIVERS=--with-dri-drivers=$DRI_DRIVERS
    fi
fi

VULKAN_DRIVERS=intel
if [[ "$MESON" -ne 0 ]]; then
    GALLIUM_DRIVERS=iris,swrast
    if [[ "$CROCUS" -ne 0 ]]; then
        GALLIUM_DRIVERS=${GALLIUM_DRIVERS},crocus
    fi
    if [[ "$HASVK" -ne 0 ]]; then
        VULKAN_DRIVERS=${VULKAN_DRIVERS},intel_hasvk
    fi
else
    GALLIUM_DRIVERS=
fi

# Since we may `rm -r` MESA_BUILD_DIR, let's add some safety
if [[ -z "$MESA_BUILD_DIR" || ! "$MESA_BUILD_DIR" =~ /build/ ]]; then
    echo "Error! `build` is not found in MESA_BUILD_DIR env-var!"
    echo "MESA_BUILD_DIR: $MESA_BUILD_DIR"
    exit 1
fi

MESON_CROSS="$FDO_BUILD_DIR/meson-cross"
if [[ -f "$FDO_BUILD_DIR/meson-cross" ]]; then
    MESON_CROSS="--cross=$MESON_CROSS"
else
    unset MESON_CROSS
fi

if [[ -d "$MESA_BUILD_DIR" && ! -z "$MESA_BUILD_DIR" ]]; then
    echo "Removing old build dir: $MESA_BUILD_DIR"
    rm -r "$MESA_BUILD_DIR"
fi

if [[ "$MESON" -ne 0 ]]; then
    meson \
        -Dgallium-drivers=$GALLIUM_DRIVERS \
        $DRI_DRIVERS -Dvulkan-drivers=$VULKAN_DRIVERS \
        -Dtools=drm-shim,intel -Dbuild-tests=true -Dinstall-intel-gpu-tests=true \
        -Dglvnd=true -Dlibunwind=disabled \
        -Dopencl-spirv=true -Dgallium-opencl=icd -Dintel-clc=enabled \
        --build.pkg-config-path "$PKG_CONFIG_PATH" \
        --prefix="$PREFIX" --libdir="lib/$LIB_ARCH-linux-gnu" \
        --buildtype=$MESON_BUILDTYPE \
        $MESON_CROSS \
        "$MESA_DIR" "$MESA_BUILD_DIR"
else
    mkdir -p "$MESA_BUILD_DIR"
    cd "$MESA_BUILD_DIR"
    "$MESA_DIR/autogen.sh" \
        --prefix=$PREFIX \
        --enable-gles3 --enable-gles2 --enable-gles1 \
        --enable-egl \
        $DRI_DRIVERS \
        $DEBUG_FLAG \
        $HOST_FLAG \
        --enable-texture-float \
        --enable-shared-glapi \
        --enable-glx-tls \
        --with-egl-drivers=dri2,dri3,glx \
        --with-platforms=x11,drm,wayland --with-egl-platforms=x11,drm,wayland \
        --enable-gbm \
        --disable-glu --with-gallium-drivers=$GALLIUM_DRIVERS \
        --disable-gallium-egl \
        --with-vulkan-drivers=$VULKAN_DRIVERS \
        CFLAGS="$CFLAGS" CXXFLAGS="$CXXFLAGS" CPPFLAGS="$CPPFLAGS" \
        --enable-autotools \
        "$@"
fi

#  --with-egl-platforms=x11,wayland,drm --enable-gbm --disable-gallium-egl

: ${FDO_PRJ="mesa"}

FDO_NAME="$(basename "$FDO")"

if [[ $? -eq 0 ]]; then
    RES=configured
else
    RES="config failed"
fi
if [ -n "$DEBUG" ]; then
  echo $FDO_NAME/$FDO_PRJ $RES for DEBUG
else
  echo $FDO_NAME/$FDO_PRJ $RES for RELEASE
fi
